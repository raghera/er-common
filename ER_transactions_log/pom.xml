<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

    <scm>
        <!-- a read write url where maven will check in source code -->
        <developerConnection>scm:cvs:pserver:@svn.sp.vodafone.com:/opt/cvs/us:components/${project.artifactId}</developerConnection>
    </scm>
	<parent>
		<groupId>com.vodafone</groupId>
		<artifactId>er-common</artifactId>
		<version>1.0-SNAPSHOT</version>
	</parent>

	<groupId>com.vodafone.er</groupId>
	<artifactId>ER_transactions_log</artifactId>
	<version>0.52.0-SNAPSHOT</version>
	<packaging>bundle</packaging>
	<name>${project.artifactId}</name>
	<description>${project.artifactId}, packaged with maven as a jar file (and also an osgi bundle)</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.javadoc.skip>true</maven.javadoc.skip>
		<maven.compiler.target>1.7</maven.compiler.target>
		<maven.compiler.source>1.7</maven.compiler.source>
	</properties>

    <dependencies>

		<!-- vodafone -->
	<!-- org.osgi.framework.system.packages.extra=sun.reflect -->
		<dependency>
			<groupId>com.vodafone.common</groupId>
			<artifactId>APPLICATION_app_common</artifactId>
			<version>0.154.0</version>
			<exclusions>
				<exclusion>
					<groupId>org.apache.axis2</groupId>
					<artifactId>axis2-kernel</artifactId>
				</exclusion>
			</exclusions>

		</dependency>

		<!-- all others, open source -->
		<dependency>
			<groupId>org.perf4j</groupId>
			<artifactId>perf4j</artifactId>
			<version>0.9.16</version>
		</dependency>

	</dependencies>


	<repositories>
		<!-- the vodafone platformdev maven repository where this module retrieves 
			its dependencies -->
		<repository>
			<id>svn.sp.vodafone.com</id>
			<url>https://svn.sp.vodafone.com/archiva/repository/platformdev/</url>
			<name>Vodafone platform dev maven repository</name>
			<snapshots>
				<!-- we are not using snapshots of vodafone module dependencies -->
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository>

		<!-- the vodafone internal maven repository where this module retrieves 
			some dependencies -->
		<!-- <repository>
			<id>internal.svn.sp.vodafone.com</id>
			<url>https://svn.sp.vodafone.com/archiva/repository/internal/</url>
			<name>Vodafone internal maven repository</name>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>
			</releases>
		</repository> -->
		
		<!-- another way of accessing the same internal vodafone maven repositories, from Eller -->
		<!-- <repository>
			<id>eller.platformdev.svn.sp.vodafone.com</id>
			<url>http://rcmsvn1.prd.de1.sp.vodafone.com:8080/archiva/repository/platformdev/</url>
			<name>Vodafone platform dev maven repository</name>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>eller.internal.svn.sp.vodafone.com</id>
			<url>http://rcmsvn1.prd.de1.sp.vodafone.com:8080/archiva/repository/internal/</url>
			<name>Vodafone internal maven repository</name>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository> -->
		
		
		
	</repositories>


	<distributionManagement>
		<!-- the vodafone platformdev maven repository where we deploy released 
			versions of this module -->
		<repository>
			<id>svn.sp.vodafone.com</id>
			<url>https://svn.sp.vodafone.com/archiva/repository/platformdev</url>
			<name>Vodafone platform dev maven repository</name>
		</repository>
		<!-- we only want to deploy promoted ie released modules not snapshots -->
	</distributionManagement>


	<build>
		<!-- the name of the jar file we will create -->
		<finalName>${project.artifactId}</finalName>
		<resources>
			<resource>	<!-- to pick up execution-config.xml -->
				<directory>resources</directory>
			</resource>
		</resources>
		<plugins>
			<!-- this plugin is required in order to have maven build this as an OSGI 
				bundle not a plain jar -->
			<plugin>
				<groupId>org.apache.felix</groupId>
				<artifactId>maven-bundle-plugin</artifactId>
				<version>2.3.7</version>
				<extensions>true</extensions>
				<configuration>
					<instructions>
						<Export-Package>
						com.vodafone.global.er,
						com.vodafone.global.er.data,
						com.vodafone.global.er.translog,
						com.vodafone.global.er.ulf.constants,
						com.vodafone.global.er.ulf.service,
						com.vodafone.global.er.ulf.service.impl
						</Export-Package>
					</instructions>
				</configuration>
						
			</plugin>
	<!-- doesn't normally need specifying, but if you don't, maven can end up using biz.aQute instead -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.1</version>
			</plugin>
		</plugins>
	</build>



	<issueManagement>
		<system>JIRA</system>
		<url>https://jira.sp.vodafone.com</url>
	</issueManagement>
</project>
