//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.09.03 at 03:16:51 PM BST 
//


package com.vodafone.global.er.decoupling.binding.request.impl;

public class SelfcareFullSubscriptionsTypeImpl implements com.vodafone.global.er.decoupling.binding.request.SelfcareFullSubscriptionsType, com.sun.xml.bind.JAXBObject, com.vodafone.global.er.decoupling.binding.request.impl.runtime.UnmarshallableObject, com.vodafone.global.er.decoupling.binding.request.impl.runtime.XMLSerializable, com.vodafone.global.er.decoupling.binding.request.impl.runtime.ValidatableObject
{

    protected com.vodafone.global.er.decoupling.binding.request.SelfcareFullSubscriptionsType.SubscriptionFilterType _SubscriptionFilter;
    protected boolean has_Device;
    protected int _Device;
    protected java.lang.String _Msisdn;
    protected java.lang.String _LogId;
    public final static java.lang.Class version = (com.vodafone.global.er.decoupling.binding.request.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.vodafone.global.er.decoupling.binding.request.SelfcareFullSubscriptionsType.class);
    }

    public com.vodafone.global.er.decoupling.binding.request.SelfcareFullSubscriptionsType.SubscriptionFilterType getSubscriptionFilter() {
        return _SubscriptionFilter;
    }

    public void setSubscriptionFilter(com.vodafone.global.er.decoupling.binding.request.SelfcareFullSubscriptionsType.SubscriptionFilterType value) {
        _SubscriptionFilter = value;
    }

    public int getDevice() {
        return _Device;
    }

    public void setDevice(int value) {
        _Device = value;
        has_Device = true;
    }

    public java.lang.String getMsisdn() {
        return _Msisdn;
    }

    public void setMsisdn(java.lang.String value) {
        _Msisdn = value;
    }

    public java.lang.String getLogId() {
        return _LogId;
    }

    public void setLogId(java.lang.String value) {
        _LogId = value;
    }

    public com.vodafone.global.er.decoupling.binding.request.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.vodafone.global.er.decoupling.binding.request.impl.runtime.UnmarshallingContext context) {
        return new com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(com.vodafone.global.er.decoupling.binding.request.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("", "msisdn");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _Msisdn), "Msisdn");
        } catch (java.lang.Exception e) {
            com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        if (has_Device) {
            context.startElement("", "device");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _Device)), "Device");
            } catch (java.lang.Exception e) {
                com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (_SubscriptionFilter!= null) {
            context.startElement("", "subscription-filter");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _SubscriptionFilter), "SubscriptionFilter");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _SubscriptionFilter), "SubscriptionFilter");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _SubscriptionFilter), "SubscriptionFilter");
            context.endElement();
        }
        if (_LogId!= null) {
            context.startElement("", "log-id");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _LogId), "LogId");
            } catch (java.lang.Exception e) {
                com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
    }

    public void serializeAttributes(com.vodafone.global.er.decoupling.binding.request.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(com.vodafone.global.er.decoupling.binding.request.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.vodafone.global.er.decoupling.binding.request.SelfcareFullSubscriptionsType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\'com.sun.msv.grammar."
+"trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/gr"
+"ammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000s"
+"q\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLor"
+"g/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun"
+"/msv/util/StringPair;xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z"
+"\u0000\u0005valuexp\u0000psr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000"
+"\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicT"
+"ype\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003"
+"L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0017L\u0000\nwhite"
+"Spacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 h"
+"ttp://www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv.data"
+"type.xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun."
+"msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.su"
+"n.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q"
+"\u0000~\u0000\u0012psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq"
+"\u0000~\u0000\u0017L\u0000\fnamespaceURIq\u0000~\u0000\u0017xpq\u0000~\u0000\u001bq\u0000~\u0000\u001asr\u0000\u001dcom.sun.msv.grammar."
+"ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 com.sun.msv.grammar.Attribut"
+"eExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\txq\u0000~\u0000\u0003q\u0000~\u0000\u0012psq\u0000~\u0000"
+"\rppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0014q\u0000"
+"~\u0000\u001at\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$"
+"Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001dq\u0000~\u0000 sq\u0000~\u0000!q\u0000~\u0000*q\u0000~\u0000\u001asr\u0000#com.sun.ms"
+"v.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0017L\u0000\fname"
+"spaceURIq\u0000~\u0000\u0017xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt"
+"\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instancesr\u00000com.su"
+"n.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003s"
+"q\u0000~\u0000\u0011\u0001psq\u0000~\u0000.t\u0000\u0006msisdnt\u0000\u0000sq\u0000~\u0000#ppsq\u0000~\u0000\bq\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\r"
+"ppsr\u0000 com.sun.msv.datatype.xsd.IntType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun"
+".msv.datatype.xsd.IntegerDerivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacets"
+"t\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl;xq\u0000~\u0000\u0014q\u0000~\u0000\u001at\u0000\u0003in"
+"tq\u0000~\u0000,sr\u0000*com.sun.msv.datatype.xsd.MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.RangeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimi"
+"tValuet\u0000\u0012Ljava/lang/Object;xr\u00009com.sun.msv.datatype.xsd.Data"
+"TypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datat"
+"ype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needVa"
+"lueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000?L\u0000\fconcreteTypet\u0000\'Lcom/sun/msv/d"
+"atatype/xsd/ConcreteType;L\u0000\tfacetNameq\u0000~\u0000\u0017xq\u0000~\u0000\u0016ppq\u0000~\u0000,\u0000\u0001sr\u0000"
+"*com.sun.msv.datatype.xsd.MinInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000C"
+"ppq\u0000~\u0000,\u0000\u0000sr\u0000!com.sun.msv.datatype.xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"
+"~\u0000>q\u0000~\u0000\u001at\u0000\u0004longq\u0000~\u0000,sq\u0000~\u0000Bppq\u0000~\u0000,\u0000\u0001sq\u0000~\u0000Ippq\u0000~\u0000,\u0000\u0000sr\u0000$com.su"
+"n.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000>q\u0000~\u0000\u001at\u0000\u0007integ"
+"erq\u0000~\u0000,sr\u0000,com.sun.msv.datatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.datatype.xsd.DataTypeWithLexic"
+"alConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000Fppq\u0000~\u0000,\u0001\u0000sr\u0000#com.sun.msv.d"
+"atatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0014q\u0000~\u0000\u001at\u0000\u0007decimalq\u0000~\u0000,q"
+"\u0000~\u0000Wt\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000Qt\u0000\fminInclusivesr\u0000\u000ejava.lang.L"
+"ong;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000\u0005valuexr\u0000\u0010java.lang.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000q\u0000~\u0000Qt\u0000\fmaxInclusivesq\u0000~\u0000[\u007f\u00ff\u00ff\u00ff\u00ff\u00ff\u00ff\u00ffq\u0000~\u0000Lq\u0000~\u0000Zsr\u0000\u0011java.lang"
+".Integer\u0012\u00e2\u00a0\u00a4\u00f7\u0081\u00878\u0002\u0000\u0001I\u0000\u0005valuexq\u0000~\u0000\\\u0080\u0000\u0000\u0000q\u0000~\u0000Lq\u0000~\u0000^sq\u0000~\u0000`\u007f\u00ff\u00ff\u00ffq\u0000~"
+"\u0000 sq\u0000~\u0000!q\u0000~\u0000Aq\u0000~\u0000\u001asq\u0000~\u0000#ppsq\u0000~\u0000%q\u0000~\u0000\u0012pq\u0000~\u0000\'q\u0000~\u00000q\u0000~\u00004sq\u0000~\u0000.t"
+"\u0000\u0006deviceq\u0000~\u00008q\u0000~\u00004sq\u0000~\u0000#ppsq\u0000~\u0000\bq\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\bpp\u0000sq\u0000~"
+"\u0000#ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.s"
+"un.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0012psq\u0000"
+"~\u0000%q\u0000~\u0000\u0012psr\u00002com.sun.msv.grammar.Expression$AnyStringExpress"
+"ion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u00005psr\u0000 com.sun.msv.grammar.AnyNameCla"
+"ss\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000/q\u0000~\u00004sq\u0000~\u0000.t\u0000fcom.vodafone.global.er.deco"
+"upling.binding.request.SelfcareFullSubscriptionsType.Subscri"
+"ptionFilterTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-element"
+"ssq\u0000~\u0000#ppsq\u0000~\u0000%q\u0000~\u0000\u0012pq\u0000~\u0000\'q\u0000~\u00000q\u0000~\u00004sq\u0000~\u0000.t\u0000\u0013subscription-fi"
+"lterq\u0000~\u00008q\u0000~\u00004sq\u0000~\u0000#ppsq\u0000~\u0000\bq\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0010sq\u0000~\u0000#ppsq\u0000~"
+"\u0000%q\u0000~\u0000\u0012pq\u0000~\u0000\'q\u0000~\u00000q\u0000~\u00004sq\u0000~\u0000.t\u0000\u0006log-idq\u0000~\u00008q\u0000~\u00004sr\u0000\"com.sun."
+"msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/"
+"msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun.msv.gram"
+"mar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVer"
+"sionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0010\u0001p"
+"q\u0000~\u0000\u0005q\u0000~\u0000hq\u0000~\u0000|q\u0000~\u0000\u0007q\u0000~\u0000\fq\u0000~\u0000oq\u0000~\u0000~q\u0000~\u0000jq\u0000~\u0000lq\u0000~\u0000$q\u0000~\u0000dq\u0000~\u0000x"
+"q\u0000~\u0000\u007fq\u0000~\u00009q\u0000~\u0000;q\u0000~\u0000\u0006x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public static class SubscriptionFilterTypeImpl implements com.vodafone.global.er.decoupling.binding.request.SelfcareFullSubscriptionsType.SubscriptionFilterType, com.sun.xml.bind.JAXBObject, com.vodafone.global.er.decoupling.binding.request.impl.runtime.UnmarshallableObject, com.vodafone.global.er.decoupling.binding.request.impl.runtime.XMLSerializable, com.vodafone.global.er.decoupling.binding.request.impl.runtime.ValidatableObject
    {

        protected boolean has_SubscriptionStatus;
        protected int _SubscriptionStatus;
        protected boolean has_PreOrder;
        protected int _PreOrder;
        protected java.lang.String _PackageClass;
        protected java.util.Calendar _SubscriptionEndDateStartValue;
        protected boolean has_MaxEvents;
        protected int _MaxEvents;
        protected boolean has_UseMaxEventsForTrans;
        protected boolean _UseMaxEventsForTrans;
        protected boolean has_RecurringEventsOnly;
        protected boolean _RecurringEventsOnly;
        protected java.lang.String _ClientId;
        protected java.lang.String _TransactionsNotRequired;
        protected boolean has_AddServices;
        protected boolean _AddServices;
        protected boolean has_ChargingMethod;
        protected int _ChargingMethod;
        protected java.util.Calendar _EndDate;
        protected java.util.Calendar _StartDate;
        protected java.util.Calendar _SubscriptionEndDateEndValue;
        protected java.lang.String _SubscriptionId;
        protected boolean has_NonRecurringEventsOnly;
        protected boolean _NonRecurringEventsOnly;
        protected java.lang.String _PartnerId;
        protected boolean has_IsUsingLocalDate;
        protected boolean _IsUsingLocalDate;
        protected java.lang.String _PackageId;
        public final static java.lang.Class version = (com.vodafone.global.er.decoupling.binding.request.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (com.vodafone.global.er.decoupling.binding.request.SelfcareFullSubscriptionsType.SubscriptionFilterType.class);
        }

        public int getSubscriptionStatus() {
            return _SubscriptionStatus;
        }

        public void setSubscriptionStatus(int value) {
            _SubscriptionStatus = value;
            has_SubscriptionStatus = true;
        }

        public int getPreOrder() {
            return _PreOrder;
        }

        public void setPreOrder(int value) {
            _PreOrder = value;
            has_PreOrder = true;
        }

        public java.lang.String getPackageClass() {
            return _PackageClass;
        }

        public void setPackageClass(java.lang.String value) {
            _PackageClass = value;
        }

        public java.util.Calendar getSubscriptionEndDateStartValue() {
            return _SubscriptionEndDateStartValue;
        }

        public void setSubscriptionEndDateStartValue(java.util.Calendar value) {
            _SubscriptionEndDateStartValue = value;
        }

        public int getMaxEvents() {
            return _MaxEvents;
        }

        public void setMaxEvents(int value) {
            _MaxEvents = value;
            has_MaxEvents = true;
        }

        public boolean isUseMaxEventsForTrans() {
            return _UseMaxEventsForTrans;
        }

        public void setUseMaxEventsForTrans(boolean value) {
            _UseMaxEventsForTrans = value;
            has_UseMaxEventsForTrans = true;
        }

        public boolean isRecurringEventsOnly() {
            return _RecurringEventsOnly;
        }

        public void setRecurringEventsOnly(boolean value) {
            _RecurringEventsOnly = value;
            has_RecurringEventsOnly = true;
        }

        public java.lang.String getClientId() {
            return _ClientId;
        }

        public void setClientId(java.lang.String value) {
            _ClientId = value;
        }

        public java.lang.String getTransactionsNotRequired() {
            return _TransactionsNotRequired;
        }

        public void setTransactionsNotRequired(java.lang.String value) {
            _TransactionsNotRequired = value;
        }

        public boolean isAddServices() {
            return _AddServices;
        }

        public void setAddServices(boolean value) {
            _AddServices = value;
            has_AddServices = true;
        }

        public int getChargingMethod() {
            return _ChargingMethod;
        }

        public void setChargingMethod(int value) {
            _ChargingMethod = value;
            has_ChargingMethod = true;
        }

        public java.util.Calendar getEndDate() {
            return _EndDate;
        }

        public void setEndDate(java.util.Calendar value) {
            _EndDate = value;
        }

        public java.util.Calendar getStartDate() {
            return _StartDate;
        }

        public void setStartDate(java.util.Calendar value) {
            _StartDate = value;
        }

        public java.util.Calendar getSubscriptionEndDateEndValue() {
            return _SubscriptionEndDateEndValue;
        }

        public void setSubscriptionEndDateEndValue(java.util.Calendar value) {
            _SubscriptionEndDateEndValue = value;
        }

        public java.lang.String getSubscriptionId() {
            return _SubscriptionId;
        }

        public void setSubscriptionId(java.lang.String value) {
            _SubscriptionId = value;
        }

        public boolean isNonRecurringEventsOnly() {
            return _NonRecurringEventsOnly;
        }

        public void setNonRecurringEventsOnly(boolean value) {
            _NonRecurringEventsOnly = value;
            has_NonRecurringEventsOnly = true;
        }

        public java.lang.String getPartnerId() {
            return _PartnerId;
        }

        public void setPartnerId(java.lang.String value) {
            _PartnerId = value;
        }

        public boolean isIsUsingLocalDate() {
            return _IsUsingLocalDate;
        }

        public void setIsUsingLocalDate(boolean value) {
            _IsUsingLocalDate = value;
            has_IsUsingLocalDate = true;
        }

        public java.lang.String getPackageId() {
            return _PackageId;
        }

        public void setPackageId(java.lang.String value) {
            _PackageId = value;
        }

        public com.vodafone.global.er.decoupling.binding.request.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.vodafone.global.er.decoupling.binding.request.impl.runtime.UnmarshallingContext context) {
            return new com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(com.vodafone.global.er.decoupling.binding.request.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            if (_SubscriptionId!= null) {
                context.startElement("", "subscription-id");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(((java.lang.String) _SubscriptionId), "SubscriptionId");
                } catch (java.lang.Exception e) {
                    com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
            if (has_PreOrder) {
                context.startElement("", "pre-order");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _PreOrder)), "PreOrder");
                } catch (java.lang.Exception e) {
                    com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
            if (has_ChargingMethod) {
                context.startElement("", "charging-method");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _ChargingMethod)), "ChargingMethod");
                } catch (java.lang.Exception e) {
                    com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
            if (has_SubscriptionStatus) {
                context.startElement("", "subscription-status");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _SubscriptionStatus)), "SubscriptionStatus");
                } catch (java.lang.Exception e) {
                    com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
            if (has_RecurringEventsOnly) {
                context.startElement("", "recurring-events-only");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _RecurringEventsOnly)), "RecurringEventsOnly");
                } catch (java.lang.Exception e) {
                    com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
            if (has_NonRecurringEventsOnly) {
                context.startElement("", "non-recurring-events-only");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _NonRecurringEventsOnly)), "NonRecurringEventsOnly");
                } catch (java.lang.Exception e) {
                    com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
            if (_StartDate!= null) {
                context.startElement("", "start-date");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _StartDate), null), "StartDate");
                } catch (java.lang.Exception e) {
                    com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
            if (_EndDate!= null) {
                context.startElement("", "end-date");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _EndDate), null), "EndDate");
                } catch (java.lang.Exception e) {
                    com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
            if (_SubscriptionEndDateStartValue!= null) {
                context.startElement("", "subscription-end-date-start-value");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _SubscriptionEndDateStartValue), null), "SubscriptionEndDateStartValue");
                } catch (java.lang.Exception e) {
                    com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
            if (_SubscriptionEndDateEndValue!= null) {
                context.startElement("", "subscription-end-date-end-value");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _SubscriptionEndDateEndValue), null), "SubscriptionEndDateEndValue");
                } catch (java.lang.Exception e) {
                    com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
            if (_TransactionsNotRequired!= null) {
                context.startElement("", "transactions-not-required");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(((java.lang.String) _TransactionsNotRequired), "TransactionsNotRequired");
                } catch (java.lang.Exception e) {
                    com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
            if (has_AddServices) {
                context.startElement("", "add-services");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _AddServices)), "AddServices");
                } catch (java.lang.Exception e) {
                    com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
            if (_ClientId!= null) {
                context.startElement("", "client-id");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(((java.lang.String) _ClientId), "ClientId");
                } catch (java.lang.Exception e) {
                    com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
            if (has_MaxEvents) {
                context.startElement("", "max-events");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printInt(((int) _MaxEvents)), "MaxEvents");
                } catch (java.lang.Exception e) {
                    com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
            if (_PackageClass!= null) {
                context.startElement("", "package-class");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(((java.lang.String) _PackageClass), "PackageClass");
                } catch (java.lang.Exception e) {
                    com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
            if (has_IsUsingLocalDate) {
                context.startElement("", "is-using-local-date");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _IsUsingLocalDate)), "IsUsingLocalDate");
                } catch (java.lang.Exception e) {
                    com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
            if (has_UseMaxEventsForTrans) {
                context.startElement("", "use-max-events-for-trans");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _UseMaxEventsForTrans)), "UseMaxEventsForTrans");
                } catch (java.lang.Exception e) {
                    com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
            if (_PackageId!= null) {
                context.startElement("", "package-id");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(((java.lang.String) _PackageId), "PackageId");
                } catch (java.lang.Exception e) {
                    com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
            if (_PartnerId!= null) {
                context.startElement("", "partner-id");
                context.endNamespaceDecls();
                context.endAttributes();
                try {
                    context.text(((java.lang.String) _PartnerId), "PartnerId");
                } catch (java.lang.Exception e) {
                    com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
                }
                context.endElement();
            }
        }

        public void serializeAttributes(com.vodafone.global.er.decoupling.binding.request.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public void serializeURIs(com.vodafone.global.er.decoupling.binding.request.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
        }

        public java.lang.Class getPrimaryInterface() {
            return (com.vodafone.global.er.decoupling.binding.request.SelfcareFullSubscriptionsType.SubscriptionFilterType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar."
+"ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.Ele"
+"mentPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/Na"
+"meClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aigno"
+"reUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lan"
+"g.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.gra"
+"mmar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatyp"
+"e;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000"
+"\u0003q\u0000~\u0000\u001epsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\r"
+"isAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fn"
+"amespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000(L\u0000\nwhiteSpac"
+"et\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http:"
+"//www.w3.org/2001/XMLSchemat\u0000\u0006stringsr\u00005com.sun.msv.datatype"
+".xsd.WhiteSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv."
+"datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.ms"
+"v.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u001e"
+"psr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000("
+"L\u0000\fnamespaceURIq\u0000~\u0000(xpq\u0000~\u0000,q\u0000~\u0000+sq\u0000~\u0000\u0017ppsr\u0000 com.sun.msv.gram"
+"mar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u001axq\u0000~\u0000"
+"\u0003q\u0000~\u0000\u001epsq\u0000~\u0000 ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000%q\u0000~\u0000+t\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpa"
+"ceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000.q\u0000~\u00001sq\u0000~\u00002q\u0000~\u0000:q\u0000~\u0000+sr"
+"\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalName"
+"q\u0000~\u0000(L\u0000\fnamespaceURIq\u0000~\u0000(xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instan"
+"cesr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u001d\u0001psq\u0000~\u0000>t\u0000\u000fsubscription-idt\u0000\u0000q\u0000~\u0000Dsq\u0000~\u0000\u0017pps"
+"q\u0000~\u0000\u0019q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000 ppsr\u0000 com.sun.msv.datatype.xsd.Int"
+"Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDerivedTy"
+"pe\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype/xsd/XSDat"
+"atypeImpl;xq\u0000~\u0000%q\u0000~\u0000+t\u0000\u0003intq\u0000~\u0000<sr\u0000*com.sun.msv.datatype.xsd"
+".MaxInclusiveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000#com.sun.msv.datatype.xsd.Ra"
+"ngeFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\nlimitValuet\u0000\u0012Ljava/lang/Object;xr\u00009com"
+".sun.msv.datatype.xsd.DataTypeWithValueConstraintFacet\"\u00a7Ro\u00ca\u00c7"
+"\u008aT\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0005Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000OL\u0000\fcon"
+"creteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetN"
+"ameq\u0000~\u0000(xq\u0000~\u0000\'ppq\u0000~\u0000<\u0000\u0001sr\u0000*com.sun.msv.datatype.xsd.MinInclu"
+"siveFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Sppq\u0000~\u0000<\u0000\u0000sr\u0000!com.sun.msv.datatype."
+"xsd.LongType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Nq\u0000~\u0000+t\u0000\u0004longq\u0000~\u0000<sq\u0000~\u0000Rppq\u0000~\u0000<\u0000"
+"\u0001sq\u0000~\u0000Yppq\u0000~\u0000<\u0000\u0000sr\u0000$com.sun.msv.datatype.xsd.IntegerType\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Nq\u0000~\u0000+t\u0000\u0007integerq\u0000~\u0000<sr\u0000,com.sun.msv.datatype.xs"
+"d.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun.msv.data"
+"type.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea\u0002\u0000\u0000xq\u0000~\u0000V"
+"ppq\u0000~\u0000<\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"q\u0000~\u0000%q\u0000~\u0000+t\u0000\u0007decimalq\u0000~\u0000<q\u0000~\u0000gt\u0000\u000efractionDigits\u0000\u0000\u0000\u0000q\u0000~\u0000at\u0000\fm"
+"inInclusivesr\u0000\u000ejava.lang.Long;\u008b\u00e4\u0090\u00cc\u008f#\u00df\u0002\u0000\u0001J\u0000\u0005valuexr\u0000\u0010java.lan"
+"g.Number\u0086\u00ac\u0095\u001d\u000b\u0094\u00e0\u008b\u0002\u0000\u0000xp\u0080\u0000\u0000\u0000\u0000\u0000\u0000\u0000q\u0000~\u0000at\u0000\fmaxInclusivesq\u0000~\u0000k\u007f\u00ff\u00ff\u00ff\u00ff"
+"\u00ff\u00ff\u00ffq\u0000~\u0000\\q\u0000~\u0000jsr\u0000\u0011java.lang.Integer\u0012\u00e2\u00a0\u00a4\u00f7\u0081\u00878\u0002\u0000\u0001I\u0000\u0005valuexq\u0000~\u0000l\u0080"
+"\u0000\u0000\u0000q\u0000~\u0000\\q\u0000~\u0000nsq\u0000~\u0000p\u007f\u00ff\u00ff\u00ffq\u0000~\u00001sq\u0000~\u00002q\u0000~\u0000Qq\u0000~\u0000+sq\u0000~\u0000\u0017ppsq\u0000~\u00005q\u0000"
+"~\u0000\u001epq\u0000~\u00007q\u0000~\u0000@q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\tpre-orderq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017ppsq\u0000~\u0000"
+"\u0019q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Lsq\u0000~\u0000\u0017ppsq\u0000~\u00005q\u0000~\u0000\u001epq\u0000~\u00007q\u0000~\u0000@q\u0000~\u0000Dsq\u0000~"
+"\u0000>t\u0000\u000fcharging-methodq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017ppsq\u0000~\u0000\u0019q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000ppq"
+"\u0000~\u0000Lsq\u0000~\u0000\u0017ppsq\u0000~\u00005q\u0000~\u0000\u001epq\u0000~\u00007q\u0000~\u0000@q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\u0013subscription"
+"-statusq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017ppsq\u0000~\u0000\u0019q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000 ppsr\u0000$co"
+"m.sun.msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000%q\u0000~\u0000+t\u0000\u0007b"
+"ooleanq\u0000~\u0000<q\u0000~\u00001sq\u0000~\u00002q\u0000~\u0000\u008cq\u0000~\u0000+sq\u0000~\u0000\u0017ppsq\u0000~\u00005q\u0000~\u0000\u001epq\u0000~\u00007q\u0000~"
+"\u0000@q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\u0015recurring-events-onlyq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017ppsq\u0000~\u0000"
+"\u0019q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0089sq\u0000~\u0000\u0017ppsq\u0000~\u00005q\u0000~\u0000\u001epq\u0000~\u00007q\u0000~\u0000@q\u0000~\u0000Dsq\u0000~"
+"\u0000>t\u0000\u0019non-recurring-events-onlyq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017ppsq\u0000~\u0000\u0019q\u0000~\u0000\u001ep"
+"\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000 ppsr\u0000%com.sun.msv.datatype.xsd.DateTimeType\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.sun.msv.datatype.xsd.DateTimeBaseType\u0014W\u001a@3\u00a5"
+"\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u0000%q\u0000~\u0000+t\u0000\bdateTimeq\u0000~\u0000<q\u0000~\u00001sq\u0000~\u00002q\u0000~\u0000\u00a0q\u0000~\u0000+sq\u0000~\u0000\u0017p"
+"psq\u0000~\u00005q\u0000~\u0000\u001epq\u0000~\u00007q\u0000~\u0000@q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\nstart-dateq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000"
+"~\u0000\u0017ppsq\u0000~\u0000\u0019q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u009csq\u0000~\u0000\u0017ppsq\u0000~\u00005q\u0000~\u0000\u001epq\u0000~\u00007q\u0000~\u0000"
+"@q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\bend-dateq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017ppsq\u0000~\u0000\u0019q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000"
+"ppq\u0000~\u0000\u009csq\u0000~\u0000\u0017ppsq\u0000~\u00005q\u0000~\u0000\u001epq\u0000~\u00007q\u0000~\u0000@q\u0000~\u0000Dsq\u0000~\u0000>t\u0000!subscript"
+"ion-end-date-start-valueq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017ppsq\u0000~\u0000\u0019q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000"
+"\u0000ppq\u0000~\u0000\u009csq\u0000~\u0000\u0017ppsq\u0000~\u00005q\u0000~\u0000\u001epq\u0000~\u00007q\u0000~\u0000@q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\u001fsubscrip"
+"tion-end-date-end-valueq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017ppsq\u0000~\u0000\u0019q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000"
+"ppq\u0000~\u0000#sq\u0000~\u0000\u0017ppsq\u0000~\u00005q\u0000~\u0000\u001epq\u0000~\u00007q\u0000~\u0000@q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\u0019transacti"
+"ons-not-requiredq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017ppsq\u0000~\u0000\u0019q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0089"
+"sq\u0000~\u0000\u0017ppsq\u0000~\u00005q\u0000~\u0000\u001epq\u0000~\u00007q\u0000~\u0000@q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\fadd-servicesq\u0000~\u0000"
+"Hq\u0000~\u0000Dsq\u0000~\u0000\u0017ppsq\u0000~\u0000\u0019q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000#sq\u0000~\u0000\u0017ppsq\u0000~\u00005q\u0000~\u0000\u001ep"
+"q\u0000~\u00007q\u0000~\u0000@q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\tclient-idq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017ppsq\u0000~\u0000\u0019q\u0000~"
+"\u0000\u001ep\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000Lsq\u0000~\u0000\u0017ppsq\u0000~\u00005q\u0000~\u0000\u001epq\u0000~\u00007q\u0000~\u0000@q\u0000~\u0000Dsq\u0000~\u0000>t\u0000"
+"\nmax-eventsq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017ppsq\u0000~\u0000\u0019q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000#sq\u0000~\u0000"
+"\u0017ppsq\u0000~\u00005q\u0000~\u0000\u001epq\u0000~\u00007q\u0000~\u0000@q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\rpackage-classq\u0000~\u0000Hq\u0000~"
+"\u0000Dsq\u0000~\u0000\u0017ppsq\u0000~\u0000\u0019q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0089sq\u0000~\u0000\u0017ppsq\u0000~\u00005q\u0000~\u0000\u001epq\u0000~\u0000"
+"7q\u0000~\u0000@q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\u0013is-using-local-dateq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017ppsq\u0000"
+"~\u0000\u0019q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000\u0089sq\u0000~\u0000\u0017ppsq\u0000~\u00005q\u0000~\u0000\u001epq\u0000~\u00007q\u0000~\u0000@q\u0000~\u0000Dsq"
+"\u0000~\u0000>t\u0000\u0018use-max-events-for-transq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017ppsq\u0000~\u0000\u0019q\u0000~\u0000\u001e"
+"p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000#sq\u0000~\u0000\u0017ppsq\u0000~\u00005q\u0000~\u0000\u001epq\u0000~\u00007q\u0000~\u0000@q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\np"
+"ackage-idq\u0000~\u0000Hq\u0000~\u0000Dsq\u0000~\u0000\u0017ppsq\u0000~\u0000\u0019q\u0000~\u0000\u001ep\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000#sq\u0000~\u0000\u0017p"
+"psq\u0000~\u00005q\u0000~\u0000\u001epq\u0000~\u00007q\u0000~\u0000@q\u0000~\u0000Dsq\u0000~\u0000>t\u0000\npartner-idq\u0000~\u0000Hq\u0000~\u0000Dsr\u0000"
+"\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/"
+"Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun"
+".msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\r"
+"streamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool"
+";xp\u0000\u0000\u0000K\u0001pq\u0000~\u0000\u00d2q\u0000~\u0000\u0081q\u0000~\u0000zq\u0000~\u0000Kq\u0000~\u0000\u0006q\u0000~\u0000\fq\u0000~\u0000\u0013q\u0000~\u0000\tq\u0000~\u0000\u00b6q\u0000~\u0000\u00afq"
+"\u0000~\u0000\u00a8q\u0000~\u0000\u009bq\u0000~\u0000\u00c9q\u0000~\u0000\u00bbq\u0000~\u0000\u0018q\u0000~\u0000\u0011q\u0000~\u0000\u0014q\u0000~\u0000\u00d7q\u0000~\u0000\u00ecq\u0000~\u0000\u00f3q\u0000~\u0000\rq\u0000~\u0000\u000eq"
+"\u0000~\u0000\nq\u0000~\u0000\u0007q\u0000~\u0000\u0015q\u0000~\u0000\u00b4q\u0000~\u0000\u00adq\u0000~\u0000\u00a6q\u0000~\u0000\u0099q\u0000~\u0000\u000fq\u0000~\u0000\bq\u0000~\u0000\u00d9q\u0000~\u0000\u00cbq\u0000~\u0000\u00bdq"
+"\u0000~\u0000\u001fq\u0000~\u0000\u00eeq\u0000~\u0000\u00f5q\u0000~\u0000\u00c2q\u0000~\u0000\u0092q\u0000~\u0000\u0086q\u0000~\u0000\u0012q\u0000~\u0000\u00deq\u0000~\u0000\u00e5q\u0000~\u0000\u0016q\u0000~\u0000\u0005q\u0000~\u0000\u000bq"
+"\u0000~\u0000\u0010q\u0000~\u0000\u00daq\u0000~\u0000\u00d3q\u0000~\u0000\u00ccq\u0000~\u0000\u00c5q\u0000~\u0000\u00beq\u0000~\u0000\u00b7q\u0000~\u0000\u00b0q\u0000~\u0000\u00a9q\u0000~\u0000\u00a2q\u0000~\u0000\u0095q\u0000~\u0000\u008eq"
+"\u0000~\u0000\u0082q\u0000~\u0000\u00c4q\u0000~\u0000\u0094q\u0000~\u0000\u0088q\u0000~\u0000{q\u0000~\u0000tq\u0000~\u00004q\u0000~\u0000\u00e1q\u0000~\u0000\u00e0q\u0000~\u0000\u00e8q\u0000~\u0000\u00e7q\u0000~\u0000\u00efq"
+"\u0000~\u0000\u00f6q\u0000~\u0000\u00d0q\u0000~\u0000\u007fq\u0000~\u0000xq\u0000~\u0000Ix"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public class Unmarshaller
            extends com.vodafone.global.er.decoupling.binding.request.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(com.vodafone.global.er.decoupling.binding.request.impl.runtime.UnmarshallingContext context) {
                super(context, "----------------------------------------------------------");
            }

            protected Unmarshaller(com.vodafone.global.er.decoupling.binding.request.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  0 :
                            if (("subscription-id" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 1;
                                return ;
                            }
                            state = 3;
                            continue outer;
                        case  51 :
                            if (("package-id" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 52;
                                return ;
                            }
                            state = 54;
                            continue outer;
                        case  6 :
                            if (("charging-method" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 7;
                                return ;
                            }
                            state = 9;
                            continue outer;
                        case  18 :
                            if (("start-date" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 19;
                                return ;
                            }
                            state = 21;
                            continue outer;
                        case  9 :
                            if (("subscription-status" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 10;
                                return ;
                            }
                            state = 12;
                            continue outer;
                        case  3 :
                            if (("pre-order" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 4;
                                return ;
                            }
                            state = 6;
                            continue outer;
                        case  27 :
                            if (("subscription-end-date-end-value" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 28;
                                return ;
                            }
                            state = 30;
                            continue outer;
                        case  48 :
                            if (("use-max-events-for-trans" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 49;
                                return ;
                            }
                            state = 51;
                            continue outer;
                        case  54 :
                            if (("partner-id" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 55;
                                return ;
                            }
                            state = 57;
                            continue outer;
                        case  45 :
                            if (("is-using-local-date" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 46;
                                return ;
                            }
                            state = 48;
                            continue outer;
                        case  24 :
                            if (("subscription-end-date-start-value" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 25;
                                return ;
                            }
                            state = 27;
                            continue outer;
                        case  30 :
                            if (("transactions-not-required" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 31;
                                return ;
                            }
                            state = 33;
                            continue outer;
                        case  12 :
                            if (("recurring-events-only" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 13;
                                return ;
                            }
                            state = 15;
                            continue outer;
                        case  36 :
                            if (("client-id" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 37;
                                return ;
                            }
                            state = 39;
                            continue outer;
                        case  57 :
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        case  33 :
                            if (("add-services" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 34;
                                return ;
                            }
                            state = 36;
                            continue outer;
                        case  39 :
                            if (("max-events" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 40;
                                return ;
                            }
                            state = 42;
                            continue outer;
                        case  15 :
                            if (("non-recurring-events-only" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 16;
                                return ;
                            }
                            state = 18;
                            continue outer;
                        case  42 :
                            if (("package-class" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 43;
                                return ;
                            }
                            state = 45;
                            continue outer;
                        case  21 :
                            if (("end-date" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, true);
                                state = 22;
                                return ;
                            }
                            state = 24;
                            continue outer;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  2 :
                            if (("subscription-id" == ___local)&&("" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  26 :
                            if (("subscription-end-date-start-value" == ___local)&&("" == ___uri)) {
                                context.popAttributes();
                                state = 27;
                                return ;
                            }
                            break;
                        case  0 :
                            state = 3;
                            continue outer;
                        case  51 :
                            state = 54;
                            continue outer;
                        case  53 :
                            if (("package-id" == ___local)&&("" == ___uri)) {
                                context.popAttributes();
                                state = 54;
                                return ;
                            }
                            break;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  38 :
                            if (("client-id" == ___local)&&("" == ___uri)) {
                                context.popAttributes();
                                state = 39;
                                return ;
                            }
                            break;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  27 :
                            state = 30;
                            continue outer;
                        case  48 :
                            state = 51;
                            continue outer;
                        case  54 :
                            state = 57;
                            continue outer;
                        case  45 :
                            state = 48;
                            continue outer;
                        case  5 :
                            if (("pre-order" == ___local)&&("" == ___uri)) {
                                context.popAttributes();
                                state = 6;
                                return ;
                            }
                            break;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  11 :
                            if (("subscription-status" == ___local)&&("" == ___uri)) {
                                context.popAttributes();
                                state = 12;
                                return ;
                            }
                            break;
                        case  30 :
                            state = 33;
                            continue outer;
                        case  20 :
                            if (("start-date" == ___local)&&("" == ___uri)) {
                                context.popAttributes();
                                state = 21;
                                return ;
                            }
                            break;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  36 :
                            state = 39;
                            continue outer;
                        case  41 :
                            if (("max-events" == ___local)&&("" == ___uri)) {
                                context.popAttributes();
                                state = 42;
                                return ;
                            }
                            break;
                        case  57 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                        case  33 :
                            state = 36;
                            continue outer;
                        case  44 :
                            if (("package-class" == ___local)&&("" == ___uri)) {
                                context.popAttributes();
                                state = 45;
                                return ;
                            }
                            break;
                        case  32 :
                            if (("transactions-not-required" == ___local)&&("" == ___uri)) {
                                context.popAttributes();
                                state = 33;
                                return ;
                            }
                            break;
                        case  35 :
                            if (("add-services" == ___local)&&("" == ___uri)) {
                                context.popAttributes();
                                state = 36;
                                return ;
                            }
                            break;
                        case  14 :
                            if (("recurring-events-only" == ___local)&&("" == ___uri)) {
                                context.popAttributes();
                                state = 15;
                                return ;
                            }
                            break;
                        case  39 :
                            state = 42;
                            continue outer;
                        case  56 :
                            if (("partner-id" == ___local)&&("" == ___uri)) {
                                context.popAttributes();
                                state = 57;
                                return ;
                            }
                            break;
                        case  47 :
                            if (("is-using-local-date" == ___local)&&("" == ___uri)) {
                                context.popAttributes();
                                state = 48;
                                return ;
                            }
                            break;
                        case  29 :
                            if (("subscription-end-date-end-value" == ___local)&&("" == ___uri)) {
                                context.popAttributes();
                                state = 30;
                                return ;
                            }
                            break;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  8 :
                            if (("charging-method" == ___local)&&("" == ___uri)) {
                                context.popAttributes();
                                state = 9;
                                return ;
                            }
                            break;
                        case  42 :
                            state = 45;
                            continue outer;
                        case  21 :
                            state = 24;
                            continue outer;
                        case  17 :
                            if (("non-recurring-events-only" == ___local)&&("" == ___uri)) {
                                context.popAttributes();
                                state = 18;
                                return ;
                            }
                            break;
                        case  23 :
                            if (("end-date" == ___local)&&("" == ___uri)) {
                                context.popAttributes();
                                state = 24;
                                return ;
                            }
                            break;
                        case  50 :
                            if (("use-max-events-for-trans" == ___local)&&("" == ___uri)) {
                                context.popAttributes();
                                state = 51;
                                return ;
                            }
                            break;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  0 :
                            state = 3;
                            continue outer;
                        case  51 :
                            state = 54;
                            continue outer;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  27 :
                            state = 30;
                            continue outer;
                        case  48 :
                            state = 51;
                            continue outer;
                        case  54 :
                            state = 57;
                            continue outer;
                        case  45 :
                            state = 48;
                            continue outer;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  30 :
                            state = 33;
                            continue outer;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  36 :
                            state = 39;
                            continue outer;
                        case  57 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                        case  33 :
                            state = 36;
                            continue outer;
                        case  39 :
                            state = 42;
                            continue outer;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  42 :
                            state = 45;
                            continue outer;
                        case  21 :
                            state = 24;
                            continue outer;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  0 :
                            state = 3;
                            continue outer;
                        case  51 :
                            state = 54;
                            continue outer;
                        case  6 :
                            state = 9;
                            continue outer;
                        case  18 :
                            state = 21;
                            continue outer;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  27 :
                            state = 30;
                            continue outer;
                        case  48 :
                            state = 51;
                            continue outer;
                        case  54 :
                            state = 57;
                            continue outer;
                        case  45 :
                            state = 48;
                            continue outer;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  30 :
                            state = 33;
                            continue outer;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  36 :
                            state = 39;
                            continue outer;
                        case  57 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                        case  33 :
                            state = 36;
                            continue outer;
                        case  39 :
                            state = 42;
                            continue outer;
                        case  15 :
                            state = 18;
                            continue outer;
                        case  42 :
                            state = 45;
                            continue outer;
                        case  21 :
                            state = 24;
                            continue outer;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  22 :
                                state = 23;
                                eatText1(value);
                                return ;
                            case  0 :
                                state = 3;
                                continue outer;
                            case  51 :
                                state = 54;
                                continue outer;
                            case  40 :
                                state = 41;
                                eatText2(value);
                                return ;
                            case  19 :
                                state = 20;
                                eatText3(value);
                                return ;
                            case  6 :
                                state = 9;
                                continue outer;
                            case  18 :
                                state = 21;
                                continue outer;
                            case  9 :
                                state = 12;
                                continue outer;
                            case  52 :
                                state = 53;
                                eatText4(value);
                                return ;
                            case  10 :
                                state = 11;
                                eatText5(value);
                                return ;
                            case  3 :
                                state = 6;
                                continue outer;
                            case  27 :
                                state = 30;
                                continue outer;
                            case  48 :
                                state = 51;
                                continue outer;
                            case  25 :
                                state = 26;
                                eatText6(value);
                                return ;
                            case  54 :
                                state = 57;
                                continue outer;
                            case  45 :
                                state = 48;
                                continue outer;
                            case  7 :
                                state = 8;
                                eatText7(value);
                                return ;
                            case  24 :
                                state = 27;
                                continue outer;
                            case  16 :
                                state = 17;
                                eatText8(value);
                                return ;
                            case  30 :
                                state = 33;
                                continue outer;
                            case  4 :
                                state = 5;
                                eatText9(value);
                                return ;
                            case  49 :
                                state = 50;
                                eatText10(value);
                                return ;
                            case  12 :
                                state = 15;
                                continue outer;
                            case  36 :
                                state = 39;
                                continue outer;
                            case  57 :
                                revertToParentFromText(value);
                                return ;
                            case  33 :
                                state = 36;
                                continue outer;
                            case  31 :
                                state = 32;
                                eatText11(value);
                                return ;
                            case  39 :
                                state = 42;
                                continue outer;
                            case  28 :
                                state = 29;
                                eatText12(value);
                                return ;
                            case  1 :
                                state = 2;
                                eatText13(value);
                                return ;
                            case  34 :
                                state = 35;
                                eatText14(value);
                                return ;
                            case  15 :
                                state = 18;
                                continue outer;
                            case  42 :
                                state = 45;
                                continue outer;
                            case  43 :
                                state = 44;
                                eatText15(value);
                                return ;
                            case  13 :
                                state = 14;
                                eatText16(value);
                                return ;
                            case  21 :
                                state = 24;
                                continue outer;
                            case  55 :
                                state = 56;
                                eatText17(value);
                                return ;
                            case  37 :
                                state = 38;
                                eatText18(value);
                                return ;
                            case  46 :
                                state = 47;
                                eatText19(value);
                                return ;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

            private void eatText1(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _EndDate = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText2(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _MaxEvents = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    has_MaxEvents = true;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText3(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _StartDate = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText4(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _PackageId = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText5(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _SubscriptionStatus = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    has_SubscriptionStatus = true;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText6(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _SubscriptionEndDateStartValue = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText7(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _ChargingMethod = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    has_ChargingMethod = true;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText8(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _NonRecurringEventsOnly = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    has_NonRecurringEventsOnly = true;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText9(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _PreOrder = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    has_PreOrder = true;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText10(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _UseMaxEventsForTrans = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    has_UseMaxEventsForTrans = true;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText11(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _TransactionsNotRequired = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText12(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _SubscriptionEndDateEndValue = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText13(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _SubscriptionId = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText14(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _AddServices = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    has_AddServices = true;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText15(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _PackageClass = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText16(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _RecurringEventsOnly = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    has_RecurringEventsOnly = true;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText17(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _PartnerId = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText18(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _ClientId = value;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

            private void eatText19(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                try {
                    _IsUsingLocalDate = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                    has_IsUsingLocalDate = true;
                } catch (java.lang.Exception e) {
                    handleParseConversionException(e);
                }
            }

        }

    }

    public class Unmarshaller
        extends com.vodafone.global.er.decoupling.binding.request.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.vodafone.global.er.decoupling.binding.request.impl.runtime.UnmarshallingContext context) {
            super(context, "-------------");
        }

        protected Unmarshaller(com.vodafone.global.er.decoupling.binding.request.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        if (("subscription-filter" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  7 :
                        if (("subscription-id" == ___local)&&("" == ___uri)) {
                            _SubscriptionFilter = ((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl) spawnChildFromEnterElement((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("pre-order" == ___local)&&("" == ___uri)) {
                            _SubscriptionFilter = ((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl) spawnChildFromEnterElement((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("charging-method" == ___local)&&("" == ___uri)) {
                            _SubscriptionFilter = ((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl) spawnChildFromEnterElement((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("subscription-status" == ___local)&&("" == ___uri)) {
                            _SubscriptionFilter = ((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl) spawnChildFromEnterElement((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("recurring-events-only" == ___local)&&("" == ___uri)) {
                            _SubscriptionFilter = ((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl) spawnChildFromEnterElement((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("non-recurring-events-only" == ___local)&&("" == ___uri)) {
                            _SubscriptionFilter = ((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl) spawnChildFromEnterElement((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("start-date" == ___local)&&("" == ___uri)) {
                            _SubscriptionFilter = ((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl) spawnChildFromEnterElement((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("end-date" == ___local)&&("" == ___uri)) {
                            _SubscriptionFilter = ((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl) spawnChildFromEnterElement((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("subscription-end-date-start-value" == ___local)&&("" == ___uri)) {
                            _SubscriptionFilter = ((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl) spawnChildFromEnterElement((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("subscription-end-date-end-value" == ___local)&&("" == ___uri)) {
                            _SubscriptionFilter = ((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl) spawnChildFromEnterElement((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("transactions-not-required" == ___local)&&("" == ___uri)) {
                            _SubscriptionFilter = ((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl) spawnChildFromEnterElement((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("add-services" == ___local)&&("" == ___uri)) {
                            _SubscriptionFilter = ((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl) spawnChildFromEnterElement((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("client-id" == ___local)&&("" == ___uri)) {
                            _SubscriptionFilter = ((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl) spawnChildFromEnterElement((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("max-events" == ___local)&&("" == ___uri)) {
                            _SubscriptionFilter = ((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl) spawnChildFromEnterElement((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("package-class" == ___local)&&("" == ___uri)) {
                            _SubscriptionFilter = ((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl) spawnChildFromEnterElement((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("is-using-local-date" == ___local)&&("" == ___uri)) {
                            _SubscriptionFilter = ((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl) spawnChildFromEnterElement((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("use-max-events-for-trans" == ___local)&&("" == ___uri)) {
                            _SubscriptionFilter = ((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl) spawnChildFromEnterElement((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("package-id" == ___local)&&("" == ___uri)) {
                            _SubscriptionFilter = ((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl) spawnChildFromEnterElement((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        if (("partner-id" == ___local)&&("" == ___uri)) {
                            _SubscriptionFilter = ((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl) spawnChildFromEnterElement((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _SubscriptionFilter = ((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl) spawnChildFromEnterElement((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl.class), 8, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  3 :
                        if (("device" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  12 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  9 :
                        if (("log-id" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  0 :
                        if (("msisdn" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 1;
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  11 :
                        if (("log-id" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  7 :
                        _SubscriptionFilter = ((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl) spawnChildFromLeaveElement((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl.class), 8, ___uri, ___local, ___qname));
                        return ;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  12 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  8 :
                        if (("subscription-filter" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  2 :
                        if (("msisdn" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  5 :
                        if (("device" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        state = 9;
                        continue outer;
                    case  7 :
                        _SubscriptionFilter = ((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl) spawnChildFromEnterAttribute((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl.class), 8, ___uri, ___local, ___qname));
                        return ;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  12 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  9 :
                        state = 12;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        state = 9;
                        continue outer;
                    case  7 :
                        _SubscriptionFilter = ((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl) spawnChildFromLeaveAttribute((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl.class), 8, ___uri, ___local, ___qname));
                        return ;
                    case  3 :
                        state = 6;
                        continue outer;
                    case  12 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  9 :
                        state = 12;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  6 :
                            state = 9;
                            continue outer;
                        case  7 :
                            _SubscriptionFilter = ((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl) spawnChildFromText((com.vodafone.global.er.decoupling.binding.request.impl.SelfcareFullSubscriptionsTypeImpl.SubscriptionFilterTypeImpl.class), 8, value));
                            return ;
                        case  10 :
                            state = 11;
                            eatText1(value);
                            return ;
                        case  3 :
                            state = 6;
                            continue outer;
                        case  12 :
                            revertToParentFromText(value);
                            return ;
                        case  1 :
                            state = 2;
                            eatText2(value);
                            return ;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  4 :
                            state = 5;
                            eatText3(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _LogId = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Msisdn = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Device = javax.xml.bind.DatatypeConverter.parseInt(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_Device = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
