//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.09.03 at 03:16:51 PM BST 
//


package com.vodafone.global.er.decoupling.binding.request.impl;

public class SuperCreditPricePointFullTypeImpl implements com.vodafone.global.er.decoupling.binding.request.SuperCreditPricePointFullType, com.sun.xml.bind.JAXBObject, com.vodafone.global.er.decoupling.binding.request.impl.runtime.UnmarshallableObject, com.vodafone.global.er.decoupling.binding.request.impl.runtime.XMLSerializable, com.vodafone.global.er.decoupling.binding.request.impl.runtime.ValidatableObject
{

    protected java.lang.String _PurchaseLinkText;
    protected java.lang.String _BearerId;
    protected boolean has_RoamingGrossAmount;
    protected double _RoamingGrossAmount;
    protected boolean has_IsValidSuperCreditOption;
    protected boolean _IsValidSuperCreditOption;
    protected boolean has_IsDiscount;
    protected boolean _IsDiscount;
    protected boolean has_InteractiveFlag;
    protected boolean _InteractiveFlag;
    protected boolean has_TaxRate;
    protected double _TaxRate;
    protected java.lang.String _StandardRateAsString;
    protected java.lang.String _PricePointIdLink;
    protected boolean has_IsRecurringPackage;
    protected boolean _IsRecurringPackage;
    protected boolean has_IsActive;
    protected boolean _IsActive;
    protected boolean has_IsTrial;
    protected boolean _IsTrial;
    protected boolean has_RoamingNetAmount;
    protected double _RoamingNetAmount;
    protected java.lang.String _RateAsString;
    protected boolean has_IsHistoric;
    protected boolean _IsHistoric;
    protected java.lang.String _PromoCode;
    protected java.lang.String _SuperCreditText;
    protected boolean has_NetRate;
    protected double _NetRate;
    protected java.util.Calendar _FixedExpiryDate;
    protected java.lang.String _RateIdentifier;
    protected java.lang.String _RoamingType;
    protected com.vodafone.global.er.decoupling.binding.request.ChargingResourceFullType _ChargingResource;
    protected com.vodafone.global.er.decoupling.binding.request.DrmObjectFullType _DrmObject;
    protected java.lang.String _Id;
    protected boolean has_IsPreview;
    protected boolean _IsPreview;
    protected boolean has_StandardRate;
    protected double _StandardRate;
    protected java.lang.String _PricingText1;
    protected java.lang.String _PricingText2;
    protected java.lang.String _DiscountPromoText;
    protected boolean has_IsPreOrder;
    protected boolean _IsPreOrder;
    public final static java.lang.Class version = (com.vodafone.global.er.decoupling.binding.request.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.vodafone.global.er.decoupling.binding.request.SuperCreditPricePointFullType.class);
    }

    public java.lang.String getPurchaseLinkText() {
        return _PurchaseLinkText;
    }

    public void setPurchaseLinkText(java.lang.String value) {
        _PurchaseLinkText = value;
    }

    public java.lang.String getBearerId() {
        return _BearerId;
    }

    public void setBearerId(java.lang.String value) {
        _BearerId = value;
    }

    public double getRoamingGrossAmount() {
        return _RoamingGrossAmount;
    }

    public void setRoamingGrossAmount(double value) {
        _RoamingGrossAmount = value;
        has_RoamingGrossAmount = true;
    }

    public boolean isIsValidSuperCreditOption() {
        return _IsValidSuperCreditOption;
    }

    public void setIsValidSuperCreditOption(boolean value) {
        _IsValidSuperCreditOption = value;
        has_IsValidSuperCreditOption = true;
    }

    public boolean isIsDiscount() {
        return _IsDiscount;
    }

    public void setIsDiscount(boolean value) {
        _IsDiscount = value;
        has_IsDiscount = true;
    }

    public boolean isInteractiveFlag() {
        return _InteractiveFlag;
    }

    public void setInteractiveFlag(boolean value) {
        _InteractiveFlag = value;
        has_InteractiveFlag = true;
    }

    public double getTaxRate() {
        return _TaxRate;
    }

    public void setTaxRate(double value) {
        _TaxRate = value;
        has_TaxRate = true;
    }

    public java.lang.String getStandardRateAsString() {
        return _StandardRateAsString;
    }

    public void setStandardRateAsString(java.lang.String value) {
        _StandardRateAsString = value;
    }

    public java.lang.String getPricePointIdLink() {
        return _PricePointIdLink;
    }

    public void setPricePointIdLink(java.lang.String value) {
        _PricePointIdLink = value;
    }

    public boolean isIsRecurringPackage() {
        return _IsRecurringPackage;
    }

    public void setIsRecurringPackage(boolean value) {
        _IsRecurringPackage = value;
        has_IsRecurringPackage = true;
    }

    public boolean isIsActive() {
        return _IsActive;
    }

    public void setIsActive(boolean value) {
        _IsActive = value;
        has_IsActive = true;
    }

    public boolean isIsTrial() {
        return _IsTrial;
    }

    public void setIsTrial(boolean value) {
        _IsTrial = value;
        has_IsTrial = true;
    }

    public double getRoamingNetAmount() {
        return _RoamingNetAmount;
    }

    public void setRoamingNetAmount(double value) {
        _RoamingNetAmount = value;
        has_RoamingNetAmount = true;
    }

    public java.lang.String getRateAsString() {
        return _RateAsString;
    }

    public void setRateAsString(java.lang.String value) {
        _RateAsString = value;
    }

    public boolean isIsHistoric() {
        return _IsHistoric;
    }

    public void setIsHistoric(boolean value) {
        _IsHistoric = value;
        has_IsHistoric = true;
    }

    public java.lang.String getPromoCode() {
        return _PromoCode;
    }

    public void setPromoCode(java.lang.String value) {
        _PromoCode = value;
    }

    public java.lang.String getSuperCreditText() {
        return _SuperCreditText;
    }

    public void setSuperCreditText(java.lang.String value) {
        _SuperCreditText = value;
    }

    public double getNetRate() {
        return _NetRate;
    }

    public void setNetRate(double value) {
        _NetRate = value;
        has_NetRate = true;
    }

    public java.util.Calendar getFixedExpiryDate() {
        return _FixedExpiryDate;
    }

    public void setFixedExpiryDate(java.util.Calendar value) {
        _FixedExpiryDate = value;
    }

    public java.lang.String getRateIdentifier() {
        return _RateIdentifier;
    }

    public void setRateIdentifier(java.lang.String value) {
        _RateIdentifier = value;
    }

    public java.lang.String getRoamingType() {
        return _RoamingType;
    }

    public void setRoamingType(java.lang.String value) {
        _RoamingType = value;
    }

    public com.vodafone.global.er.decoupling.binding.request.ChargingResourceFullType getChargingResource() {
        return _ChargingResource;
    }

    public void setChargingResource(com.vodafone.global.er.decoupling.binding.request.ChargingResourceFullType value) {
        _ChargingResource = value;
    }

    public com.vodafone.global.er.decoupling.binding.request.DrmObjectFullType getDrmObject() {
        return _DrmObject;
    }

    public void setDrmObject(com.vodafone.global.er.decoupling.binding.request.DrmObjectFullType value) {
        _DrmObject = value;
    }

    public java.lang.String getId() {
        return _Id;
    }

    public void setId(java.lang.String value) {
        _Id = value;
    }

    public boolean isIsPreview() {
        return _IsPreview;
    }

    public void setIsPreview(boolean value) {
        _IsPreview = value;
        has_IsPreview = true;
    }

    public double getStandardRate() {
        return _StandardRate;
    }

    public void setStandardRate(double value) {
        _StandardRate = value;
        has_StandardRate = true;
    }

    public java.lang.String getPricingText1() {
        return _PricingText1;
    }

    public void setPricingText1(java.lang.String value) {
        _PricingText1 = value;
    }

    public java.lang.String getPricingText2() {
        return _PricingText2;
    }

    public void setPricingText2(java.lang.String value) {
        _PricingText2 = value;
    }

    public java.lang.String getDiscountPromoText() {
        return _DiscountPromoText;
    }

    public void setDiscountPromoText(java.lang.String value) {
        _DiscountPromoText = value;
    }

    public boolean isIsPreOrder() {
        return _IsPreOrder;
    }

    public void setIsPreOrder(boolean value) {
        _IsPreOrder = value;
        has_IsPreOrder = true;
    }

    public com.vodafone.global.er.decoupling.binding.request.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.vodafone.global.er.decoupling.binding.request.impl.runtime.UnmarshallingContext context) {
        return new com.vodafone.global.er.decoupling.binding.request.impl.SuperCreditPricePointFullTypeImpl.Unmarshaller(context);
    }

    public void serializeBody(com.vodafone.global.er.decoupling.binding.request.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (!has_IsValidSuperCreditOption) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IsValidSuperCreditOption"));
        }
        if (!has_IsDiscount) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IsDiscount"));
        }
        if (!has_InteractiveFlag) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "InteractiveFlag"));
        }
        if (!has_IsRecurringPackage) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IsRecurringPackage"));
        }
        if (!has_IsActive) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IsActive"));
        }
        if (!has_IsTrial) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IsTrial"));
        }
        if (!has_IsHistoric) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IsHistoric"));
        }
        if (!has_NetRate) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "NetRate"));
        }
        if (!has_IsPreview) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IsPreview"));
        }
        if (!has_StandardRate) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "StandardRate"));
        }
        if (!has_IsPreOrder) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IsPreOrder"));
        }
        context.startElement("", "rate-identifier");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _RateIdentifier), "RateIdentifier");
        } catch (java.lang.Exception e) {
            com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "super-credit-text");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _SuperCreditText), "SuperCreditText");
        } catch (java.lang.Exception e) {
            com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "is-active");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _IsActive)), "IsActive");
        } catch (java.lang.Exception e) {
            com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "id");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _Id), "Id");
        } catch (java.lang.Exception e) {
            com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "discount-promo-text");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _DiscountPromoText), "DiscountPromoText");
        } catch (java.lang.Exception e) {
            com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "net-rate");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(javax.xml.bind.DatatypeConverter.printDouble(((double) _NetRate)), "NetRate");
        } catch (java.lang.Exception e) {
            com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "pricing-text-1");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _PricingText1), "PricingText1");
        } catch (java.lang.Exception e) {
            com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "pricing-text-2");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _PricingText2), "PricingText2");
        } catch (java.lang.Exception e) {
            com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "standard-rate");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(javax.xml.bind.DatatypeConverter.printDouble(((double) _StandardRate)), "StandardRate");
        } catch (java.lang.Exception e) {
            com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "standard-rate-as-string");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _StandardRateAsString), "StandardRateAsString");
        } catch (java.lang.Exception e) {
            com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "price-point-id-link");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _PricePointIdLink), "PricePointIdLink");
        } catch (java.lang.Exception e) {
            com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "purchase-link-text");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _PurchaseLinkText), "PurchaseLinkText");
        } catch (java.lang.Exception e) {
            com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "promo-code");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _PromoCode), "PromoCode");
        } catch (java.lang.Exception e) {
            com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        if (_FixedExpiryDate!= null) {
            context.startElement("", "fixed-expiry-date");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(com.sun.msv.datatype.xsd.DateTimeType.theInstance.serializeJavaObject(((java.util.Calendar) _FixedExpiryDate), null), "FixedExpiryDate");
            } catch (java.lang.Exception e) {
                com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        context.startElement("", "is-preview");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _IsPreview)), "IsPreview");
        } catch (java.lang.Exception e) {
            com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "is-pre-order");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _IsPreOrder)), "IsPreOrder");
        } catch (java.lang.Exception e) {
            com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "is-trial");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _IsTrial)), "IsTrial");
        } catch (java.lang.Exception e) {
            com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "is-discount");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _IsDiscount)), "IsDiscount");
        } catch (java.lang.Exception e) {
            com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "is-recurring-package");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _IsRecurringPackage)), "IsRecurringPackage");
        } catch (java.lang.Exception e) {
            com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "interactive-flag");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _InteractiveFlag)), "InteractiveFlag");
        } catch (java.lang.Exception e) {
            com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "drm-object");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _DrmObject), "DrmObject");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _DrmObject), "DrmObject");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _DrmObject), "DrmObject");
        context.endElement();
        context.startElement("", "charging-resource");
        context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ChargingResource), "ChargingResource");
        context.endNamespaceDecls();
        context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ChargingResource), "ChargingResource");
        context.endAttributes();
        context.childAsBody(((com.sun.xml.bind.JAXBObject) _ChargingResource), "ChargingResource");
        context.endElement();
        context.startElement("", "is-valid-super-credit-option");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _IsValidSuperCreditOption)), "IsValidSuperCreditOption");
        } catch (java.lang.Exception e) {
            com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "rate-as-string");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _RateAsString), "RateAsString");
        } catch (java.lang.Exception e) {
            com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        if (has_RoamingNetAmount) {
            context.startElement("", "roaming-net-amount");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDouble(((double) _RoamingNetAmount)), "RoamingNetAmount");
            } catch (java.lang.Exception e) {
                com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        if (has_RoamingGrossAmount) {
            context.startElement("", "roaming-gross-amount");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDouble(((double) _RoamingGrossAmount)), "RoamingGrossAmount");
            } catch (java.lang.Exception e) {
                com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        context.startElement("", "roaming-type");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _RoamingType), "RoamingType");
        } catch (java.lang.Exception e) {
            com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        if (has_TaxRate) {
            context.startElement("", "tax-rate");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(javax.xml.bind.DatatypeConverter.printDouble(((double) _TaxRate)), "TaxRate");
            } catch (java.lang.Exception e) {
                com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
        context.startElement("", "is-historic");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _IsHistoric)), "IsHistoric");
        } catch (java.lang.Exception e) {
            com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        if (_BearerId!= null) {
            context.startElement("", "bearer-id");
            context.endNamespaceDecls();
            context.endAttributes();
            try {
                context.text(((java.lang.String) _BearerId), "BearerId");
            } catch (java.lang.Exception e) {
                com.vodafone.global.er.decoupling.binding.request.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endElement();
        }
    }

    public void serializeAttributes(com.vodafone.global.er.decoupling.binding.request.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (!has_IsValidSuperCreditOption) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IsValidSuperCreditOption"));
        }
        if (!has_IsDiscount) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IsDiscount"));
        }
        if (!has_InteractiveFlag) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "InteractiveFlag"));
        }
        if (!has_IsRecurringPackage) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IsRecurringPackage"));
        }
        if (!has_IsActive) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IsActive"));
        }
        if (!has_IsTrial) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IsTrial"));
        }
        if (!has_IsHistoric) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IsHistoric"));
        }
        if (!has_NetRate) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "NetRate"));
        }
        if (!has_IsPreview) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IsPreview"));
        }
        if (!has_StandardRate) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "StandardRate"));
        }
        if (!has_IsPreOrder) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IsPreOrder"));
        }
    }

    public void serializeURIs(com.vodafone.global.er.decoupling.binding.request.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (!has_IsValidSuperCreditOption) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IsValidSuperCreditOption"));
        }
        if (!has_IsDiscount) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IsDiscount"));
        }
        if (!has_InteractiveFlag) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "InteractiveFlag"));
        }
        if (!has_IsRecurringPackage) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IsRecurringPackage"));
        }
        if (!has_IsActive) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IsActive"));
        }
        if (!has_IsTrial) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IsTrial"));
        }
        if (!has_IsHistoric) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IsHistoric"));
        }
        if (!has_NetRate) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "NetRate"));
        }
        if (!has_IsPreview) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IsPreview"));
        }
        if (!has_StandardRate) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "StandardRate"));
        }
        if (!has_IsPreOrder) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "IsPreOrder"));
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.vodafone.global.er.decoupling.binding.request.SuperCreditPricePointFullType.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\u0000ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003pp\u0000sq\u0000~\u0000\u0000ppsr\u0000\u001bcom.sun.msv.grammar.D"
+"ataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006e"
+"xceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003sr\u0000\u0011j"
+"ava.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000#com.sun.msv.datat"
+"ype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv"
+".datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.da"
+"tatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.x"
+"sd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/Str"
+"ing;L\u0000\btypeNameq\u0000~\u00001L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xs"
+"d/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat"
+"\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Pre"
+"serve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProce"
+"ssor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression$NullSet"
+"Expression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000,psr\u0000\u001bcom.sun.msv.util.String"
+"Pair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u00001L\u0000\fnamespaceURIq\u0000~\u00001xpq\u0000~\u00005q"
+"\u0000~\u00004sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsr\u0000 "
+"com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnam"
+"eClassq\u0000~\u0000#xq\u0000~\u0000\u0003q\u0000~\u0000,psq\u0000~\u0000\'ppsr\u0000\"com.sun.msv.datatype.xsd."
+"QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000.q\u0000~\u00004t\u0000\u0005QNamesr\u00005com.sun.msv.datat"
+"ype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00007q\u0000~\u0000:sq"
+"\u0000~\u0000;q\u0000~\u0000Dq\u0000~\u00004sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u00001L\u0000\fnamespaceURIq\u0000~\u00001xr\u0000\u001dcom.sun.msv.gra"
+"mmar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/"
+"XMLSchema-instancesr\u00000com.sun.msv.grammar.Expression$Epsilon"
+"Expression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000+\u0001psq\u0000~\u0000Ht\u0000\u000frate-identifiert"
+"\u0000\u0000sq\u0000~\u0000\"pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000*sq\u0000~\u0000=ppsq\u0000~\u0000?q\u0000~\u0000,pq\u0000~\u0000Aq\u0000~\u0000Jq\u0000~\u0000Ns"
+"q\u0000~\u0000Ht\u0000\u0011super-credit-textq\u0000~\u0000Rsq\u0000~\u0000\"pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\'ppsr\u0000$c"
+"om.sun.msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000.q\u0000~\u00004t\u0000\u0007"
+"booleanq\u0000~\u0000Fq\u0000~\u0000:sq\u0000~\u0000;q\u0000~\u0000^q\u0000~\u00004sq\u0000~\u0000=ppsq\u0000~\u0000?q\u0000~\u0000,pq\u0000~\u0000Aq\u0000"
+"~\u0000Jq\u0000~\u0000Nsq\u0000~\u0000Ht\u0000\tis-activeq\u0000~\u0000Rsq\u0000~\u0000\"pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000*sq\u0000~\u0000=p"
+"psq\u0000~\u0000?q\u0000~\u0000,pq\u0000~\u0000Aq\u0000~\u0000Jq\u0000~\u0000Nsq\u0000~\u0000Ht\u0000\u0002idq\u0000~\u0000Rsq\u0000~\u0000\"pp\u0000sq\u0000~\u0000\u0000p"
+"pq\u0000~\u0000*sq\u0000~\u0000=ppsq\u0000~\u0000?q\u0000~\u0000,pq\u0000~\u0000Aq\u0000~\u0000Jq\u0000~\u0000Nsq\u0000~\u0000Ht\u0000\u0013discount-p"
+"romo-textq\u0000~\u0000Rsq\u0000~\u0000\"pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\'ppsr\u0000#com.sun.msv.datat"
+"ype.xsd.DoubleType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.Fl"
+"oatingNumberType\u00fc\u00e3\u00b6\u0087\u008c\u00a8|\u00e0\u0002\u0000\u0000xq\u0000~\u0000.q\u0000~\u00004t\u0000\u0006doubleq\u0000~\u0000Fq\u0000~\u0000:sq\u0000"
+"~\u0000;q\u0000~\u0000vq\u0000~\u00004sq\u0000~\u0000=ppsq\u0000~\u0000?q\u0000~\u0000,pq\u0000~\u0000Aq\u0000~\u0000Jq\u0000~\u0000Nsq\u0000~\u0000Ht\u0000\bnet"
+"-rateq\u0000~\u0000Rsq\u0000~\u0000\"pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000*sq\u0000~\u0000=ppsq\u0000~\u0000?q\u0000~\u0000,pq\u0000~\u0000Aq\u0000~"
+"\u0000Jq\u0000~\u0000Nsq\u0000~\u0000Ht\u0000\u000epricing-text-1q\u0000~\u0000Rsq\u0000~\u0000\"pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000*sq\u0000"
+"~\u0000=ppsq\u0000~\u0000?q\u0000~\u0000,pq\u0000~\u0000Aq\u0000~\u0000Jq\u0000~\u0000Nsq\u0000~\u0000Ht\u0000\u000epricing-text-2q\u0000~\u0000R"
+"sq\u0000~\u0000\"pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000rsq\u0000~\u0000=ppsq\u0000~\u0000?q\u0000~\u0000,pq\u0000~\u0000Aq\u0000~\u0000Jq\u0000~\u0000Nsq\u0000"
+"~\u0000Ht\u0000\rstandard-rateq\u0000~\u0000Rsq\u0000~\u0000\"pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000*sq\u0000~\u0000=ppsq\u0000~\u0000?"
+"q\u0000~\u0000,pq\u0000~\u0000Aq\u0000~\u0000Jq\u0000~\u0000Nsq\u0000~\u0000Ht\u0000\u0017standard-rate-as-stringq\u0000~\u0000Rsq"
+"\u0000~\u0000\"pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000*sq\u0000~\u0000=ppsq\u0000~\u0000?q\u0000~\u0000,pq\u0000~\u0000Aq\u0000~\u0000Jq\u0000~\u0000Nsq\u0000~\u0000"
+"Ht\u0000\u0013price-point-id-linkq\u0000~\u0000Rsq\u0000~\u0000\"pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000*sq\u0000~\u0000=ppsq"
+"\u0000~\u0000?q\u0000~\u0000,pq\u0000~\u0000Aq\u0000~\u0000Jq\u0000~\u0000Nsq\u0000~\u0000Ht\u0000\u0012purchase-link-textq\u0000~\u0000Rsq\u0000"
+"~\u0000\"pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000*sq\u0000~\u0000=ppsq\u0000~\u0000?q\u0000~\u0000,pq\u0000~\u0000Aq\u0000~\u0000Jq\u0000~\u0000Nsq\u0000~\u0000H"
+"t\u0000\npromo-codeq\u0000~\u0000Rsq\u0000~\u0000=ppsq\u0000~\u0000\"q\u0000~\u0000,p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\'ppsr\u0000%c"
+"om.sun.msv.datatype.xsd.DateTimeType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000)com.sun.m"
+"sv.datatype.xsd.DateTimeBaseType\u0014W\u001a@3\u00a5\u00b4\u00e5\u0002\u0000\u0000xq\u0000~\u0000.q\u0000~\u00004t\u0000\bdat"
+"eTimeq\u0000~\u0000Fq\u0000~\u0000:sq\u0000~\u0000;q\u0000~\u0000\u00adq\u0000~\u00004sq\u0000~\u0000=ppsq\u0000~\u0000?q\u0000~\u0000,pq\u0000~\u0000Aq\u0000~\u0000"
+"Jq\u0000~\u0000Nsq\u0000~\u0000Ht\u0000\u0011fixed-expiry-dateq\u0000~\u0000Rq\u0000~\u0000Nsq\u0000~\u0000\"pp\u0000sq\u0000~\u0000\u0000ppq"
+"\u0000~\u0000[sq\u0000~\u0000=ppsq\u0000~\u0000?q\u0000~\u0000,pq\u0000~\u0000Aq\u0000~\u0000Jq\u0000~\u0000Nsq\u0000~\u0000Ht\u0000\nis-previewq\u0000"
+"~\u0000Rsq\u0000~\u0000\"pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000[sq\u0000~\u0000=ppsq\u0000~\u0000?q\u0000~\u0000,pq\u0000~\u0000Aq\u0000~\u0000Jq\u0000~\u0000N"
+"sq\u0000~\u0000Ht\u0000\fis-pre-orderq\u0000~\u0000Rsq\u0000~\u0000\"pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000[sq\u0000~\u0000=ppsq\u0000~"
+"\u0000?q\u0000~\u0000,pq\u0000~\u0000Aq\u0000~\u0000Jq\u0000~\u0000Nsq\u0000~\u0000Ht\u0000\bis-trialq\u0000~\u0000Rsq\u0000~\u0000\"pp\u0000sq\u0000~\u0000\u0000"
+"ppq\u0000~\u0000[sq\u0000~\u0000=ppsq\u0000~\u0000?q\u0000~\u0000,pq\u0000~\u0000Aq\u0000~\u0000Jq\u0000~\u0000Nsq\u0000~\u0000Ht\u0000\u000bis-discou"
+"ntq\u0000~\u0000Rsq\u0000~\u0000\"pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000[sq\u0000~\u0000=ppsq\u0000~\u0000?q\u0000~\u0000,pq\u0000~\u0000Aq\u0000~\u0000Jq"
+"\u0000~\u0000Nsq\u0000~\u0000Ht\u0000\u0014is-recurring-packageq\u0000~\u0000Rsq\u0000~\u0000\"pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000["
+"sq\u0000~\u0000=ppsq\u0000~\u0000?q\u0000~\u0000,pq\u0000~\u0000Aq\u0000~\u0000Jq\u0000~\u0000Nsq\u0000~\u0000Ht\u0000\u0010interactive-flag"
+"q\u0000~\u0000Rsq\u0000~\u0000\"pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\"pp\u0000sq\u0000~\u0000=ppsr\u0000 com.sun.msv.gramm"
+"ar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000,psq\u0000~\u0000?q\u0000~\u0000,psr\u00002com.sun.msv."
+"grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000O"
+"psr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000Iq\u0000~\u0000Ns"
+"q\u0000~\u0000Ht\u0000Ccom.vodafone.global.er.decoupling.binding.request.Dr"
+"mObjectFullTypet\u0000+http://java.sun.com/jaxb/xjc/dummy-element"
+"ssq\u0000~\u0000=ppsq\u0000~\u0000?q\u0000~\u0000,pq\u0000~\u0000Aq\u0000~\u0000Jq\u0000~\u0000Nsq\u0000~\u0000Ht\u0000\ndrm-objectq\u0000~\u0000R"
+"sq\u0000~\u0000\"pp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\"pp\u0000sq\u0000~\u0000=ppsq\u0000~\u0000\u00dbq\u0000~\u0000,psq\u0000~\u0000?q\u0000~\u0000,pq\u0000"
+"~\u0000\u00e0q\u0000~\u0000\u00e2q\u0000~\u0000Nsq\u0000~\u0000Ht\u0000Jcom.vodafone.global.er.decoupling.bind"
+"ing.request.ChargingResourceFullTypeq\u0000~\u0000\u00e5sq\u0000~\u0000=ppsq\u0000~\u0000?q\u0000~\u0000,"
+"pq\u0000~\u0000Aq\u0000~\u0000Jq\u0000~\u0000Nsq\u0000~\u0000Ht\u0000\u0011charging-resourceq\u0000~\u0000Rsq\u0000~\u0000\"pp\u0000sq\u0000~"
+"\u0000\u0000ppq\u0000~\u0000[sq\u0000~\u0000=ppsq\u0000~\u0000?q\u0000~\u0000,pq\u0000~\u0000Aq\u0000~\u0000Jq\u0000~\u0000Nsq\u0000~\u0000Ht\u0000\u001cis-vali"
+"d-super-credit-optionq\u0000~\u0000Rsq\u0000~\u0000\"pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000*sq\u0000~\u0000=ppsq\u0000~"
+"\u0000?q\u0000~\u0000,pq\u0000~\u0000Aq\u0000~\u0000Jq\u0000~\u0000Nsq\u0000~\u0000Ht\u0000\u000erate-as-stringq\u0000~\u0000Rsq\u0000~\u0000=pps"
+"q\u0000~\u0000\"q\u0000~\u0000,p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000rsq\u0000~\u0000=ppsq\u0000~\u0000?q\u0000~\u0000,pq\u0000~\u0000Aq\u0000~\u0000Jq\u0000~\u0000N"
+"sq\u0000~\u0000Ht\u0000\u0012roaming-net-amountq\u0000~\u0000Rq\u0000~\u0000Nsq\u0000~\u0000=ppsq\u0000~\u0000\"q\u0000~\u0000,p\u0000sq"
+"\u0000~\u0000\u0000ppq\u0000~\u0000rsq\u0000~\u0000=ppsq\u0000~\u0000?q\u0000~\u0000,pq\u0000~\u0000Aq\u0000~\u0000Jq\u0000~\u0000Nsq\u0000~\u0000Ht\u0000\u0014roami"
+"ng-gross-amountq\u0000~\u0000Rq\u0000~\u0000Nsq\u0000~\u0000\"pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000*sq\u0000~\u0000=ppsq\u0000~\u0000"
+"?q\u0000~\u0000,pq\u0000~\u0000Aq\u0000~\u0000Jq\u0000~\u0000Nsq\u0000~\u0000Ht\u0000\froaming-typeq\u0000~\u0000Rsq\u0000~\u0000=ppsq\u0000~"
+"\u0000\"q\u0000~\u0000,p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000rsq\u0000~\u0000=ppsq\u0000~\u0000?q\u0000~\u0000,pq\u0000~\u0000Aq\u0000~\u0000Jq\u0000~\u0000Nsq\u0000"
+"~\u0000Ht\u0000\btax-rateq\u0000~\u0000Rq\u0000~\u0000Nsq\u0000~\u0000\"pp\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000[sq\u0000~\u0000=ppsq\u0000~\u0000?"
+"q\u0000~\u0000,pq\u0000~\u0000Aq\u0000~\u0000Jq\u0000~\u0000Nsq\u0000~\u0000Ht\u0000\u000bis-historicq\u0000~\u0000Rsq\u0000~\u0000=ppsq\u0000~\u0000\""
+"q\u0000~\u0000,p\u0000sq\u0000~\u0000\u0000ppq\u0000~\u0000*sq\u0000~\u0000=ppsq\u0000~\u0000?q\u0000~\u0000,pq\u0000~\u0000Aq\u0000~\u0000Jq\u0000~\u0000Nsq\u0000~\u0000"
+"Ht\u0000\tbearer-idq\u0000~\u0000Rq\u0000~\u0000Nsr\u0000\"com.sun.msv.grammar.ExpressionPoo"
+"l\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPoo"
+"l$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$Closed"
+"Hash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/"
+"msv/grammar/ExpressionPool;xp\u0000\u0000\u0000b\u0001pq\u0000~\u0001\fq\u0000~\u0001\u000bq\u0000~\u0000\u0013q\u0000~\u0001\u0012q\u0000~\u0001\u0019"
+"q\u0000~\u0001\u0018q\u0000~\u0001\u001fq\u0000~\u0001\u001eq\u0000~\u0001&q\u0000~\u0000\u0005q\u0000~\u0000\u0019q\u0000~\u0000\u0018q\u0000~\u0000\u001fq\u0000~\u0000\u000eq\u0000~\u0000\u00a8q\u0000~\u0001#q\u0000~\u0000\u001c"
+"q\u0000~\u0000\rq\u0000~\u0000\u0015q\u0000~\u0000\u0012q\u0000~\u0000\u00d8q\u0000~\u0000\u00ebq\u0000~\u0000\tq\u0000~\u0000\u0007q\u0000~\u0000!q\u0000~\u0000\u0011q\u0000~\u0000\u0010q\u0000~\u0000\u00a6q\u0000~\u0000\u000f"
+"q\u0000~\u0000\u0006q\u0000~\u0000\u00a1q\u0000~\u0000\u009bq\u0000~\u0000\u0095q\u0000~\u0000\u008fq\u0000~\u0000\u0083q\u0000~\u0000}q\u0000~\u0000kq\u0000~\u0000eq\u0000~\u0000Tq\u0000~\u0000&q\u0000~\u0000\u00fd"
+"q\u0000~\u0001\u0002q\u0000~\u0001\tq\u0000~\u0001\u0011q\u0000~\u0001\u0016q\u0000~\u0001%q\u0000~\u0000\u001dq\u0000~\u0000 q\u0000~\u0000\nq\u0000~\u0000\u000bq\u0000~\u0000\bq\u0000~\u0000\u0017q\u0000~\u0000\u001b"
+"q\u0000~\u0000\fq\u0000~\u0000\u001aq\u0000~\u0000\u0016q\u0000~\u0000\u0014q\u0000~\u0000\u00daq\u0000~\u0000\u00edq\u0000~\u0000\u001eq\u0000~\u0000\u00cdq\u0000~\u0000\u00c7q\u0000~\u0000\u00c1q\u0000~\u0000\u00bbq\u0000~\u0000\u00b5"
+"q\u0000~\u0000\u00afq\u0000~\u0000\u00a2q\u0000~\u0000\u009cq\u0000~\u0000\u0096q\u0000~\u0000\u0090q\u0000~\u0000\u008aq\u0000~\u0000\u0084q\u0000~\u0000\u00ccq\u0000~\u0000\u00c6q\u0000~\u0000\u00c0q\u0000~\u0000\u00baq\u0000~\u0000\u00b4"
+"q\u0000~\u0000Zq\u0000~\u0000~q\u0000~\u0000xq\u0000~\u0000lq\u0000~\u0000fq\u0000~\u0000\u0089q\u0000~\u0000qq\u0000~\u0000`q\u0000~\u0000Uq\u0000~\u0000>q\u0000~\u0000\u00d3q\u0000~\u0000\u00d2"
+"q\u0000~\u0000\u00ddq\u0000~\u0000\u00e6q\u0000~\u0000\u00eeq\u0000~\u0000\u00f2q\u0000~\u0000\u00f8q\u0000~\u0000\u00f7q\u0000~\u0000\u00feq\u0000~\u0001\u0005q\u0000~\u0001\u0004x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.vodafone.global.er.decoupling.binding.request.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.vodafone.global.er.decoupling.binding.request.impl.runtime.UnmarshallingContext context) {
            super(context, "-------------------------------------------------------------------------------------------");
        }

        protected Unmarshaller(com.vodafone.global.er.decoupling.binding.request.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.vodafone.global.er.decoupling.binding.request.impl.SuperCreditPricePointFullTypeImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  0 :
                        if (("rate-identifier" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 1;
                            return ;
                        }
                        break;
                    case  66 :
                        if (("is-valid-super-credit-option" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 67;
                            return ;
                        }
                        break;
                    case  90 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  84 :
                        if (("is-historic" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 85;
                            return ;
                        }
                        break;
                    case  81 :
                        if (("tax-rate" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 82;
                            return ;
                        }
                        state = 84;
                        continue outer;
                    case  61 :
                        if (("key" == ___local)&&("" == ___uri)) {
                            _DrmObject = ((com.vodafone.global.er.decoupling.binding.request.impl.DrmObjectFullTypeImpl) spawnChildFromEnterElement((com.vodafone.global.er.decoupling.binding.request.impl.DrmObjectFullTypeImpl.class), 62, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  42 :
                        if (("is-preview" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 43;
                            return ;
                        }
                        break;
                    case  75 :
                        if (("roaming-gross-amount" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 76;
                            return ;
                        }
                        state = 78;
                        continue outer;
                    case  15 :
                        if (("net-rate" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        break;
                    case  72 :
                        if (("roaming-net-amount" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 73;
                            return ;
                        }
                        state = 75;
                        continue outer;
                    case  63 :
                        if (("charging-resource" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 64;
                            return ;
                        }
                        break;
                    case  48 :
                        if (("is-trial" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 49;
                            return ;
                        }
                        break;
                    case  27 :
                        if (("standard-rate-as-string" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 28;
                            return ;
                        }
                        break;
                    case  39 :
                        if (("fixed-expiry-date" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 40;
                            return ;
                        }
                        state = 42;
                        continue outer;
                    case  45 :
                        if (("is-pre-order" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 46;
                            return ;
                        }
                        break;
                    case  33 :
                        if (("purchase-link-text" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 34;
                            return ;
                        }
                        break;
                    case  24 :
                        if (("standard-rate" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 25;
                            return ;
                        }
                        break;
                    case  12 :
                        if (("discount-promo-text" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        break;
                    case  21 :
                        if (("pricing-text-2" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 22;
                            return ;
                        }
                        break;
                    case  60 :
                        if (("drm-object" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 61;
                            return ;
                        }
                        break;
                    case  51 :
                        if (("is-discount" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 52;
                            return ;
                        }
                        break;
                    case  30 :
                        if (("price-point-id-link" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 31;
                            return ;
                        }
                        break;
                    case  87 :
                        if (("bearer-id" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 88;
                            return ;
                        }
                        state = 90;
                        continue outer;
                    case  64 :
                        if (("chargingResourceType" == ___local)&&("" == ___uri)) {
                            _ChargingResource = ((com.vodafone.global.er.decoupling.binding.request.impl.ChargingResourceFullTypeImpl) spawnChildFromEnterElement((com.vodafone.global.er.decoupling.binding.request.impl.ChargingResourceFullTypeImpl.class), 65, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  18 :
                        if (("pricing-text-1" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 19;
                            return ;
                        }
                        break;
                    case  3 :
                        if (("super-credit-text" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        break;
                    case  78 :
                        if (("roaming-type" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 79;
                            return ;
                        }
                        break;
                    case  57 :
                        if (("interactive-flag" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 58;
                            return ;
                        }
                        break;
                    case  54 :
                        if (("is-recurring-package" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 55;
                            return ;
                        }
                        break;
                    case  36 :
                        if (("promo-code" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 37;
                            return ;
                        }
                        break;
                    case  69 :
                        if (("rate-as-string" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 70;
                            return ;
                        }
                        break;
                    case  6 :
                        if (("is-active" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        break;
                    case  9 :
                        if (("id" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  8 :
                        if (("is-active" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  14 :
                        if (("discount-promo-text" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  53 :
                        if (("is-discount" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 54;
                            return ;
                        }
                        break;
                    case  90 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  68 :
                        if (("is-valid-super-credit-option" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 69;
                            return ;
                        }
                        break;
                    case  81 :
                        state = 84;
                        continue outer;
                    case  62 :
                        if (("drm-object" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 63;
                            return ;
                        }
                        break;
                    case  32 :
                        if (("price-point-id-link" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 33;
                            return ;
                        }
                        break;
                    case  56 :
                        if (("is-recurring-package" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 57;
                            return ;
                        }
                        break;
                    case  44 :
                        if (("is-preview" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 45;
                            return ;
                        }
                        break;
                    case  75 :
                        state = 78;
                        continue outer;
                    case  2 :
                        if (("rate-identifier" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  5 :
                        if (("super-credit-text" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  72 :
                        state = 75;
                        continue outer;
                    case  29 :
                        if (("standard-rate-as-string" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 30;
                            return ;
                        }
                        break;
                    case  41 :
                        if (("fixed-expiry-date" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 42;
                            return ;
                        }
                        break;
                    case  47 :
                        if (("is-pre-order" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 48;
                            return ;
                        }
                        break;
                    case  23 :
                        if (("pricing-text-2" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 24;
                            return ;
                        }
                        break;
                    case  77 :
                        if (("roaming-gross-amount" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 78;
                            return ;
                        }
                        break;
                    case  50 :
                        if (("is-trial" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 51;
                            return ;
                        }
                        break;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  80 :
                        if (("roaming-type" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 81;
                            return ;
                        }
                        break;
                    case  59 :
                        if (("interactive-flag" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 60;
                            return ;
                        }
                        break;
                    case  38 :
                        if (("promo-code" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 39;
                            return ;
                        }
                        break;
                    case  26 :
                        if (("standard-rate" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 27;
                            return ;
                        }
                        break;
                    case  11 :
                        if (("id" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  86 :
                        if (("is-historic" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 87;
                            return ;
                        }
                        break;
                    case  83 :
                        if (("tax-rate" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 84;
                            return ;
                        }
                        break;
                    case  71 :
                        if (("rate-as-string" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 72;
                            return ;
                        }
                        break;
                    case  87 :
                        state = 90;
                        continue outer;
                    case  35 :
                        if (("purchase-link-text" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 36;
                            return ;
                        }
                        break;
                    case  17 :
                        if (("net-rate" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  20 :
                        if (("pricing-text-1" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 21;
                            return ;
                        }
                        break;
                    case  74 :
                        if (("roaming-net-amount" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 75;
                            return ;
                        }
                        break;
                    case  89 :
                        if (("bearer-id" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 90;
                            return ;
                        }
                        break;
                    case  65 :
                        if (("charging-resource" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 66;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  90 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  81 :
                        state = 84;
                        continue outer;
                    case  75 :
                        state = 78;
                        continue outer;
                    case  72 :
                        state = 75;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  87 :
                        state = 90;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  90 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  81 :
                        state = 84;
                        continue outer;
                    case  75 :
                        state = 78;
                        continue outer;
                    case  72 :
                        state = 75;
                        continue outer;
                    case  39 :
                        state = 42;
                        continue outer;
                    case  87 :
                        state = 90;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  55 :
                            state = 56;
                            eatText1(value);
                            return ;
                        case  73 :
                            state = 74;
                            eatText2(value);
                            return ;
                        case  49 :
                            state = 50;
                            eatText3(value);
                            return ;
                        case  85 :
                            state = 86;
                            eatText4(value);
                            return ;
                        case  46 :
                            state = 47;
                            eatText5(value);
                            return ;
                        case  90 :
                            revertToParentFromText(value);
                            return ;
                        case  37 :
                            state = 38;
                            eatText6(value);
                            return ;
                        case  81 :
                            state = 84;
                            continue outer;
                        case  76 :
                            state = 77;
                            eatText7(value);
                            return ;
                        case  75 :
                            state = 78;
                            continue outer;
                        case  72 :
                            state = 75;
                            continue outer;
                        case  16 :
                            state = 17;
                            eatText8(value);
                            return ;
                        case  52 :
                            state = 53;
                            eatText9(value);
                            return ;
                        case  39 :
                            state = 42;
                            continue outer;
                        case  79 :
                            state = 80;
                            eatText10(value);
                            return ;
                        case  13 :
                            state = 14;
                            eatText11(value);
                            return ;
                        case  43 :
                            state = 44;
                            eatText12(value);
                            return ;
                        case  4 :
                            state = 5;
                            eatText13(value);
                            return ;
                        case  25 :
                            state = 26;
                            eatText14(value);
                            return ;
                        case  70 :
                            state = 71;
                            eatText15(value);
                            return ;
                        case  22 :
                            state = 23;
                            eatText16(value);
                            return ;
                        case  28 :
                            state = 29;
                            eatText17(value);
                            return ;
                        case  1 :
                            state = 2;
                            eatText18(value);
                            return ;
                        case  31 :
                            state = 32;
                            eatText19(value);
                            return ;
                        case  87 :
                            state = 90;
                            continue outer;
                        case  40 :
                            state = 41;
                            eatText20(value);
                            return ;
                        case  88 :
                            state = 89;
                            eatText21(value);
                            return ;
                        case  82 :
                            state = 83;
                            eatText22(value);
                            return ;
                        case  58 :
                            state = 59;
                            eatText23(value);
                            return ;
                        case  34 :
                            state = 35;
                            eatText24(value);
                            return ;
                        case  67 :
                            state = 68;
                            eatText25(value);
                            return ;
                        case  10 :
                            state = 11;
                            eatText26(value);
                            return ;
                        case  7 :
                            state = 8;
                            eatText27(value);
                            return ;
                        case  19 :
                            state = 20;
                            eatText28(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IsRecurringPackage = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_IsRecurringPackage = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _RoamingNetAmount = javax.xml.bind.DatatypeConverter.parseDouble(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_RoamingNetAmount = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IsTrial = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_IsTrial = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IsHistoric = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_IsHistoric = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IsPreOrder = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_IsPreOrder = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PromoCode = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _RoamingGrossAmount = javax.xml.bind.DatatypeConverter.parseDouble(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_RoamingGrossAmount = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText8(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _NetRate = javax.xml.bind.DatatypeConverter.parseDouble(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_NetRate = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText9(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IsDiscount = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_IsDiscount = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText10(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _RoamingType = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText11(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _DiscountPromoText = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText12(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IsPreview = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_IsPreview = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText13(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _SuperCreditText = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText14(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _StandardRate = javax.xml.bind.DatatypeConverter.parseDouble(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_StandardRate = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText15(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _RateAsString = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText16(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PricingText2 = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText17(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _StandardRateAsString = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText18(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _RateIdentifier = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText19(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PricePointIdLink = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText20(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _FixedExpiryDate = ((java.util.Calendar) com.sun.msv.datatype.xsd.DateTimeType.theInstance.createJavaObject(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value), null));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText21(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _BearerId = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText22(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _TaxRate = javax.xml.bind.DatatypeConverter.parseDouble(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_TaxRate = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText23(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _InteractiveFlag = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_InteractiveFlag = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText24(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PurchaseLinkText = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText25(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IsValidSuperCreditOption = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_IsValidSuperCreditOption = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText26(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Id = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText27(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _IsActive = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_IsActive = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText28(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _PricingText1 = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
